#! /bin/sh

### BEGIN INIT INFO
# Provides:             zorix
# Required-Start:       $remote_fs $syslog
# Required-Stop:        $remote_fs $syslog
# Default-Start:        2 3 4 5
# Default-Stop:
# Short-Description:    Zorix monitoring system
### END INIT INFO

set -e

CONFIG_FILE=/etc/zorix/config.toml
PROG=/usr/local/bin/zorix
LOG=/var/log/zorix.log
USER=zorix
ZORIX_OPTS="-c $CONFIG_FILE -l $LOG"
PID_FILE=/run/zorix.pid

# /etc/init.d/zorix: start and stop the Zorix process

test -x $PROG || exit 0

umask 022

. /lib/lsb/init-functions

# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}

# Make sure, we can write log
touch $LOG
chown $USER:$USER $LOG

case "$1" in
  start)
        log_daemon_msg "Starting Zorix monitoring" "zorix" || true
        if start-stop-daemon --start --quiet --oknodo --background --chuid $USER --make-pidfile --pidfile $PID_FILE --exec $PROG -- $ZORIX_OPTS; then
            log_end_msg 0 || true
        else
            log_end_msg 1 || true
        fi
        ;;
  stop)
        log_daemon_msg "Stopping Zorix monitoring" "zorix" || true
        if start-stop-daemon --stop --quiet --oknodo --pidfile $PID_FILE; then
            log_end_msg 0 || true
        else
            log_end_msg 1 || true
        fi
        ;;

  restart)
        log_daemon_msg "Restarting Zorix monitoring" "zorix" || true
        start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile $PID_FILE
        if start-stop-daemon --start --quiet --oknodo --background --chuid $USER --make-pidfile --pidfile $PID_FILE --exec $PROG -- $ZORIX_OPTS; then
            log_end_msg 0 || true
        else
            log_end_msg 1 || true
        fi
        ;;

  status)
        status_of_proc -p $PID_FILE $PROG zorix && exit 0 || exit $?
        ;;

  *)
        log_action_msg "Usage: /etc/init.d/zorix {start|stop|restart|status}" || true
        exit 1
esac

exit 0

